spring:
  application:
    name: gateway-service
  main:
    web-application-type: reactive
  profiles:
    active: local
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: auth
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**

        - id: user-users
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**

        - id: user-admin-users
          uri: lb://user-service
          predicates:
            - Path=/api/v1/admin/users/**

        - id: user-admin-users-index
          uri: lb://user-service
          predicates:
            - Path=/api/v1/admin/users

        - id: store
          uri: lb://store-service
          predicates:
            - Path=/api/v1/stores/**

        - id: menu
          uri: lb://store-service
          predicates:
            - Path=/api/v1/menu/**


        - id: reservation
          uri: lb://reservation-service
          predicates:
            - Path=/api/v1/reservations/**

        - id: waiting
          uri: lb://waiting-service
          predicates:
            - Path=/api/v1/waitings/**

        - id: payment
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payment/**

        - id: coupon-v1
          uri: lb://coupon-service
          predicates:
            - Path=/api/v1/coupons/**

        - id: coupon-v2
          uri: lb://coupon-service
          predicates:
            - Path=/api/v2/coupons/**

        - id: promotion-v1
          uri: lb://promotion-service
          predicates:
            - Path=/api/v1/promotions/**

        - id: promotion-v2
          uri: lb://promotion-service
          predicates:
            - Path=/api/v2/promotions/**

        - id: notification
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notifications/**

management:
  endpoints:
    web:
      exposure:
        include: "prometheus"
        exclude: env, beans
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram.http.server.request: true
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3
    baggage:
      correlation:
        enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
